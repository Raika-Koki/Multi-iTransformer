[*********************100%%**********************]  1 of 1 completed
[*********************100%%**********************]  1 of 1 completed
[*********************100%%**********************]  1 of 1 completed
[*********************100%%**********************]  1 of 1 completed
[*********************100%%**********************]  1 of 1 completed
{'AAPL': Date
2019-12-31     78.597209
2020-01-02     78.442283
2020-01-03     78.286155
2020-01-06     78.128731
2020-01-07     77.969917
                 ...
2023-05-24    173.117856
2023-05-25    173.456806
2023-05-26    173.795653
2023-05-30    174.134458
2023-05-31    174.473272
Name: trend, Length: 860, dtype: float64, 'GOOGL': Date
2019-12-31     66.804077
2020-01-02     68.264961
2020-01-03     67.907845
2020-01-06     69.717865
2020-01-07     69.583206
                 ...
2023-05-24    120.601372
2023-05-25    123.175003
2023-05-26    124.302208
2023-05-30    123.364532
2023-05-31    122.566513
Name: Adj Close, Length: 860, dtype: float64, 'META': Date
2019-12-31    204.633865
2020-01-02    209.150269
2020-01-03    208.043610
2020-01-06    211.961823
2020-01-07    212.420425
                 ...
2023-05-24    248.461929
2023-05-25    251.931458
2023-05-26    261.253387
2023-05-30    261.731964
2023-05-31    263.925323
Name: Adj Close, Length: 860, dtype: float64, 'AMZN': Date
2019-12-31     92.391998
2020-01-02     94.900497
2020-01-03     93.748497
2020-01-06     95.143997
2020-01-07     95.343002
                 ...
2023-05-24    116.750000
2023-05-25    115.000000
2023-05-26    120.110001
2023-05-30    121.660004
2023-05-31    120.580002
Name: Adj Close, Length: 860, dtype: float64, 'MSFT': Date
2019-12-31    151.139664
2020-01-02    153.938187
2020-01-03    152.021378
2020-01-06    152.414307
2020-01-07    151.024689
                 ...
2023-05-24    310.853638
2023-05-25    322.808441
2023-05-26    329.711853
2023-05-30    328.047852
2023-05-31    325.254852
Name: Adj Close, Length: 860, dtype: float64}
{'AAPL': Date
2019-12-31   -7.656533
2020-01-02   -5.129500
2020-01-03   -5.122981
2020-01-06   -6.031901
2020-01-07   -5.890125
                ...
2023-05-24   -3.198228
2023-05-25   -1.174758
2023-05-26    0.261922
2023-05-30    0.765895
2023-05-31    1.324532
Name: season, Length: 860, dtype: float64, 'GOOGL': Date
2019-12-31     66.804077
2020-01-02     68.264961
2020-01-03     67.907845
2020-01-06     69.717865
2020-01-07     69.583206
                 ...
2023-05-24    120.601372
2023-05-25    123.175003
2023-05-26    124.302208
2023-05-30    123.364532
2023-05-31    122.566513
Name: Adj Close, Length: 860, dtype: float64, 'META': Date
2019-12-31    204.633865
2020-01-02    209.150269
2020-01-03    208.043610
2020-01-06    211.961823
2020-01-07    212.420425
                 ...
2023-05-24    248.461929
2023-05-25    251.931458
2023-05-26    261.253387
2023-05-30    261.731964
2023-05-31    263.925323
Name: Adj Close, Length: 860, dtype: float64, 'AMZN': Date
2019-12-31     92.391998
2020-01-02     94.900497
2020-01-03     93.748497
2020-01-06     95.143997
2020-01-07     95.343002
                 ...
2023-05-24    116.750000
2023-05-25    115.000000
2023-05-26    120.110001
2023-05-30    121.660004
2023-05-31    120.580002
Name: Adj Close, Length: 860, dtype: float64, 'MSFT': Date
2019-12-31    151.139664
2020-01-02    153.938187
2020-01-03    152.021378
2020-01-06    152.414307
2020-01-07    151.024689
                 ...
2023-05-24    310.853638
2023-05-25    322.808441
2023-05-26    329.711853
2023-05-30    328.047852
2023-05-31    325.254852
Name: Adj Close, Length: 860, dtype: float64}
{'AAPL': Date
2019-12-31    0.309766
2020-01-02   -0.436661
2020-01-03   -0.995572
2020-01-06    0.645838
2020-01-07    0.320751
                ...
2023-05-24    0.814960
2023-05-25   -0.404820
2023-05-26    0.243908
2023-05-30    1.259117
2023-05-31    0.311998
Name: resid, Length: 860, dtype: float64, 'GOOGL': Date
2019-12-31     66.804077
2020-01-02     68.264961
2020-01-03     67.907845
2020-01-06     69.717865
2020-01-07     69.583206
                 ...
2023-05-24    120.601372
2023-05-25    123.175003
2023-05-26    124.302208
2023-05-30    123.364532
2023-05-31    122.566513
Name: Adj Close, Length: 860, dtype: float64, 'META': Date
2019-12-31    204.633865
2020-01-02    209.150269
2020-01-03    208.043610
2020-01-06    211.961823
2020-01-07    212.420425
                 ...
2023-05-24    248.461929
2023-05-25    251.931458
2023-05-26    261.253387
2023-05-30    261.731964
2023-05-31    263.925323
Name: Adj Close, Length: 860, dtype: float64, 'AMZN': Date
2019-12-31     92.391998
2020-01-02     94.900497
2020-01-03     93.748497
2020-01-06     95.143997
2020-01-07     95.343002
                 ...
2023-05-24    116.750000
2023-05-25    115.000000
2023-05-26    120.110001
2023-05-30    121.660004
2023-05-31    120.580002
Name: Adj Close, Length: 860, dtype: float64, 'MSFT': Date
2019-12-31    151.139664
2020-01-02    153.938187
2020-01-03    152.021378
2020-01-06    152.414307
2020-01-07    151.024689
                 ...
2023-05-24    310.853638
2023-05-25    322.808441
2023-05-26    329.711853
2023-05-30    328.047852
2023-05-31    325.254852
Name: Adj Close, Length: 860, dtype: float64}
Dataset created successfully.
Train Data Trend Shape: torch.Size([30, 5])
Valid Data Trend Shape: torch.Size([30, 5])
/home/raikakoki/.local/lib/python3.10/site-packages/torch/backends/cuda/__init__.py:342: FutureWarning: torch.backends.cuda.sdp_kernel() is deprecated. In the future, this context manager will be removed. Please see, torch.nn.attention.sdpa_kernel() for the new context manager, with updated signature.
  warnings.warn(
Epoch 1/10, Trend Training Loss: 1.0942, Trend Validation Loss: 0.4158, Seasonal Training Loss: 0.5539, Seasonal Validation Loss: 0.4220, Residual Training Loss: 0.6338, Residual Validation Loss: 0.4640
Epoch 2/10, Trend Training Loss: 0.2403, Trend Validation Loss: 0.4646, Seasonal Training Loss: 0.2897, Seasonal Validation Loss: 0.3630, Residual Training Loss: 0.3059, Residual Validation Loss: 0.3126
Epoch 3/10, Trend Training Loss: 0.2275, Trend Validation Loss: 0.2001, Seasonal Training Loss: 0.2354, Seasonal Validation Loss: 0.3555, Residual Training Loss: 0.2370, Residual Validation Loss: 0.3065
Epoch 4/10, Trend Training Loss: 0.1418, Trend Validation Loss: 0.2183, Seasonal Training Loss: 0.1940, Seasonal Validation Loss: 0.2830, Residual Training Loss: 0.1933, Residual Validation Loss: 0.2429
Epoch 5/10, Trend Training Loss: 0.1162, Trend Validation Loss: 0.1433, Seasonal Training Loss: 0.1684, Seasonal Validation Loss: 0.2412, Residual Training Loss: 0.1738, Residual Validation Loss: 0.2082
Epoch 6/10, Trend Training Loss: 0.0990, Trend Validation Loss: 0.1630, Seasonal Training Loss: 0.1441, Seasonal Validation Loss: 0.2231, Residual Training Loss: 0.1571, Residual Validation Loss: 0.1905
Epoch 7/10, Trend Training Loss: 0.0859, Trend Validation Loss: 0.1155, Seasonal Training Loss: 0.1264, Seasonal Validation Loss: 0.2067, Residual Training Loss: 0.1516, Residual Validation Loss: 0.1793
Epoch 8/10, Trend Training Loss: 0.0769, Trend Validation Loss: 0.1407, Seasonal Training Loss: 0.1148, Seasonal Validation Loss: 0.2165, Residual Training Loss: 0.1421, Residual Validation Loss: 0.1646
Epoch 9/10, Trend Training Loss: 0.0716, Trend Validation Loss: 0.0845, Seasonal Training Loss: 0.1171, Seasonal Validation Loss: 0.2122, Residual Training Loss: 0.1260, Residual Validation Loss: 0.1509
Epoch 10/10, Trend Training Loss: 0.0621, Trend Validation Loss: 0.1281, Seasonal Training Loss: 0.0951, Seasonal Validation Loss: 0.1933, Residual Training Loss: 0.1148, Residual Validation Loss: 0.1430
/mnt/c/Users/RAIKA KOKI/B4研究/Multi_iTransformer/STLdemo.py:189: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  predicted_trend_aapl = predicted_trend[1][0, :, 0].cpu().numpy().flatten() * std_list_trend[0] + mean_list_trend[0]
/mnt/c/Users/RAIKA KOKI/B4研究/Multi_iTransformer/STLdemo.py:190: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  predicted_seasonal_aapl = predicted_seasonal[1][0, :, 0].cpu().numpy().flatten() * std_list_seasonal[0] + mean_list_seasonal[0]
/mnt/c/Users/RAIKA KOKI/B4研究/Multi_iTransformer/STLdemo.py:191: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  predicted_resid_aapl = predicted_resid[1][0, :, 0].cpu().numpy().flatten() * std_list_resid[0] + mean_list_resid[0]
[166.37150666]
[-1.49997681]
[0.86407187]
[165.73560173]
actual_stock_price: [171.57913208 173.9239502  174.0332489  173.07940674 170.45639038
 170.73458862 171.87722778 174.30148315 176.1594696  176.10980225]
add_predicted_stock_price: [171.57913208 173.9239502  174.0332489  173.07940674 170.45639038
 170.73458862 171.87722778 174.30148315 176.1594696  165.73560173]
Index(['2023-05-17', '2023-05-18', '2023-05-19', '2023-05-22', '2023-05-23',
       '2023-05-24', '2023-05-25', '2023-05-26', '2023-05-30', '2023-05-31'],
      dtype='object', name='Date')
['2023-05-17', '2023-05-18', '2023-05-19', '2023-05-22', '2023-05-23', '2023-05-24', '2023-05-25', '2023-05-26', '2023-05-30', '2023-05-31']
/mnt/c/Users/RAIKA KOKI/B4研究/Multi_iTransformer/STLdemo.py:236: UserWarning: FigureCanvasAgg is non-interactive, and thus cannot be shown
  plt.show()
